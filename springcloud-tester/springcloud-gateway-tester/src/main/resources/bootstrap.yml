spring:
  application:
   # group: ''  #写在启动参数中，请用大写
    noGroupName: spring-gateway
    upperCaseName: ${spring.application.group:}SPRING-GATEWAY  # 为了兼容原来的eureka的访问方式，这里设定一个大写名称用于访问
    name: ${spring.application.group:}${spring.application.noGroupName:}  #不区分大小写
  cloud:
#    config:
#      label: master
#      name: ${spring.application.noGroupName:}
#      profile: ${spring.profiles.active:dev}
#      uri: ${sys.configcenter_url:http://172.16.1.51:8040/} #启动时应该加上sys.configcenter_url参数
    consul:
      enabled: true
      host: ${system.config.consul.host:127.0.0.1}  # 开发环境可以覆盖consul
      port: ${system.config.consul.port:10050} # 开发环境可以覆盖consul
      discovery:
        #是否需要注册
        register: true
        #注册的实例ID (唯一标志)
        instance-id: ${spring.application.upperCaseName}-${spring.cloud.consul.discovery.ip-address}:${spring.cloud.consul.discovery.port}
        #服务的名称
        service-name: ${spring.application.upperCaseName}
        #指定开启ip地址注册
        prefer-ip-address: true
        #当前服务的请求ip
        #ip-address: ${spring.cloud.client.ip-address}
        ip-address: ${system_config_consul_instance_ip:${spring.cloud.client.ip-address}}
        #服务的请求端口
        port: ${system_config_consul_instance_port:${server.port}} #ssl的时候这个一定system_config_consul_instance_port要配置！
        health-check-path: /monitor/health
      config:
        enabled: true
        name: ${spring.application.noGroupName:}
        format: yaml
        data-key: data
        watch:
          enabled: true
          delay: 1000
          wait-time: 30
    gateway:
#       routes:
#         - id: commmonService
#           url: lb://${spring.application.group:}\
      routes:
        - id: framework
          uri: http://localhost:20040/framework,http://localhost:20050/framework
          predicates:
            - Path=/framework/**
      #WebSocket转发配置（配置在配置中心）
#        - id: juna-trade-service
#          uri: lb:ws://${spring.application.group:}juna-trade-service     #lb:ws://xxx 表示从注册中心获取路径转发，并且请求协议换成ws
#          predicates:
#            - Path=/${spring.application.group:}juna-trade-service/ws/**
      discovery:
        locator:
          enabled: true   #直接从配置中心获取应用并转发
  management:
    security:
      enabled: false
  resources:
    static-locations: classpath:/META-INF/resources/,classpath:/resources/,\
      classpath:/static/,classpath:/public/,file:${system.static.web-uploadpath}
  profiles:
    active: ${sys.curr_profile:dev}
    user:
      name: admin
      password: fwedsflja123u120318412jlwejf
  main:
    allow-bean-definition-overriding: true
# 配置加解密根秘钥
jasypt:
  encryptor:
    password: "2019-11-15,2018-04-08,2009-09-09,I will never forgot!" #更换后所有密码要重新加密，不然启动会报错！
server:
  ssl:
    enabled: ${system.ssl.enabled:false}
    key-store-password: ENC(URpieK0FYMtvbTompqehWlu1wpyni8G3arBS8+nF5fQbDMmwar+5hsGuBUvqDRbr)             # 腾讯云申请生成证书时填写的密码，如果申请时没有填写，name下载的证书文件家中会包括一个keystorePass.txt文件，里面就是密码
    key-store: "classpath:4367958_rcm3.coinr.pro.pfx"     # 我自己进行了文件重命名
    key-store-type: PKCS12
#    key-alias: netty
system:
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    username: rcm3pro
#    password: isI17^2jM11oP*a2#1qq
#    type: com.alibaba.druid.pool.DruidDataSource
#    url: jdbc:mysql://rm-j6cetf168arj31g20io.mysql.rds.aliyuncs.com:3306/framework?userSSL=false&useUnicode=true&characterEncoding=UTF8&serverTimezone=GMT