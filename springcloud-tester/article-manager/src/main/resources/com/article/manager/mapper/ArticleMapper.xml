<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.article.manager.mapper.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.article.manager.mapper.Article">
    <!--@mbg.generated-->
    <!--@Table t_article-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="node_type" jdbcType="INTEGER" property="nodeType" />
    <result column="language_type" jdbcType="INTEGER" property="languageType" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="class_code" jdbcType="VARCHAR" property="classCode" />
    <result column="article_sort" jdbcType="INTEGER" property="articleSort" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="sub_title" jdbcType="VARCHAR" property="subTitle" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="article_content" jdbcType="LONGVARCHAR" property="articleContent" />
    <result column="article_author" jdbcType="VARCHAR" property="articleAuthor" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, node_type, language_type, parent_id, class_code, article_sort, title, sub_title, 
    image, article_content, article_author, `status`, create_by, update_by, create_time, 
    update_time
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update t_article
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="node_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.nodeType,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="language_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.languageType,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="parent_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.parentId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="class_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.classCode,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="article_sort = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.articleSort,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="title = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.title,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="sub_title = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.subTitle,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="image = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.image,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="article_content = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.articleContent,jdbcType=LONGVARCHAR}
        </foreach>
      </trim>
      <trim prefix="article_author = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.articleAuthor,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.status,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="create_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="update_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.updateBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_article
    (node_type, language_type, parent_id, class_code, article_sort, title, sub_title, 
      image, article_content, article_author, `status`, create_by, update_by, create_time, 
      update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.nodeType,jdbcType=INTEGER}, #{item.languageType,jdbcType=INTEGER}, #{item.parentId,jdbcType=INTEGER}, 
        #{item.classCode,jdbcType=VARCHAR}, #{item.articleSort,jdbcType=INTEGER}, #{item.title,jdbcType=VARCHAR}, 
        #{item.subTitle,jdbcType=VARCHAR}, #{item.image,jdbcType=VARCHAR}, #{item.articleContent,jdbcType=LONGVARCHAR}, 
        #{item.articleAuthor,jdbcType=VARCHAR}, #{item.status,jdbcType=INTEGER}, #{item.createBy,jdbcType=VARCHAR}, 
        #{item.updateBy,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.article.manager.mapper.Article" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      node_type,
      language_type,
      parent_id,
      class_code,
      article_sort,
      title,
      sub_title,
      image,
      article_content,
      article_author,
      `status`,
      create_by,
      update_by,
      create_time,
      update_time,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{nodeType,jdbcType=INTEGER},
      #{languageType,jdbcType=INTEGER},
      #{parentId,jdbcType=INTEGER},
      #{classCode,jdbcType=VARCHAR},
      #{articleSort,jdbcType=INTEGER},
      #{title,jdbcType=VARCHAR},
      #{subTitle,jdbcType=VARCHAR},
      #{image,jdbcType=VARCHAR},
      #{articleContent,jdbcType=LONGVARCHAR},
      #{articleAuthor,jdbcType=VARCHAR},
      #{status,jdbcType=INTEGER},
      #{createBy,jdbcType=VARCHAR},
      #{updateBy,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      node_type = #{nodeType,jdbcType=INTEGER},
      language_type = #{languageType,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      class_code = #{classCode,jdbcType=VARCHAR},
      article_sort = #{articleSort,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      sub_title = #{subTitle,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      article_content = #{articleContent,jdbcType=LONGVARCHAR},
      article_author = #{articleAuthor,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.article.manager.mapper.Article" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nodeType != null">
        node_type,
      </if>
      <if test="languageType != null">
        language_type,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="classCode != null">
        class_code,
      </if>
      <if test="articleSort != null">
        article_sort,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="subTitle != null">
        sub_title,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="articleContent != null">
        article_content,
      </if>
      <if test="articleAuthor != null">
        article_author,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nodeType != null">
        #{nodeType,jdbcType=INTEGER},
      </if>
      <if test="languageType != null">
        #{languageType,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="classCode != null">
        #{classCode,jdbcType=VARCHAR},
      </if>
      <if test="articleSort != null">
        #{articleSort,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="subTitle != null">
        #{subTitle,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="articleContent != null">
        #{articleContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="articleAuthor != null">
        #{articleAuthor,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="nodeType != null">
        node_type = #{nodeType,jdbcType=INTEGER},
      </if>
      <if test="languageType != null">
        language_type = #{languageType,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="classCode != null">
        class_code = #{classCode,jdbcType=VARCHAR},
      </if>
      <if test="articleSort != null">
        article_sort = #{articleSort,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="subTitle != null">
        sub_title = #{subTitle,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="articleContent != null">
        article_content = #{articleContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="articleAuthor != null">
        article_author = #{articleAuthor,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <select id="selectArticleListByParentCode" resultType="com.article.manager.vo.ArticleResultVO">
    select * from t_article
    where parent_id in
    (
    select id from t_article where class_code = #{code} and language_type = #{languageType} and status = 1 and (parent_id is null or parent_id = 0)
    )
    and status = 1
    order by article_sort desc
  </select>
</mapper>